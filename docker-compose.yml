version: '3'
services:
  dating-backend:
    build:
      context: .
      dockerfile: ./apps/dating-backend/Dockerfile
      target: development
    command: npm run start:dev
    env_file:
      - ./apps/dating-backend/.env
    ports:
      - '4000:4000'
    depends_on:
      - mongodb
      - rabbitmq
      - cache
    restart: always
  client-service:
    build:
      context: .
      dockerfile: ./apps/client-service/Dockerfile
      target: development
    command: npm run start:dev client-service
    env_file:
      - ./apps/client-service/.env
    restart: always
    depends_on:
      - mongodb
      - rabbitmq
      - cache
  rabbitmq:
    image: rabbitmq:3.11-management
    ports:
      - '5672:5672'
      - '15672:15672'
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    restart: always
  cache:
    image: redis:6.2-alpine
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes:
      - cache:/data
    logging:
      driver: none
  mongodb:
    image: mongo
    ports:
      - '27018:27017'
    volumes:
      - mongodata:/data/db
    restart: always
    logging:
      driver: none
volumes:
  mongodata:
    driver: local
  cache:
    driver: local
